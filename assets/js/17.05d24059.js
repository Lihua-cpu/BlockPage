(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{439:function(_,v,t){_.exports=t.p+"assets/img/dp1.5051e87d.png"},482:function(_,v,t){"use strict";t.r(v);var e=t(2),r=Object(e.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"概要"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[_._v("#")]),_._v(" 概要")]),_._v(" "),v("h1",{attrs:{id:"动态规划的基本思想"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态规划的基本思想"}},[_._v("#")]),_._v(" 动态规划的基本思想")]),_._v(" "),v("p",[_._v("动态规划（Dynamic Programming,DP）算法通常用于求解某种具有最优性质的问题。在这类问题中，可能会有许多可行解，每一个解都对应一个值，我们希望找到具有最优值的解。")]),_._v(" "),v("p",[_._v("动态规划算法与分治法类似，其基本思想也是将待求解的问题分解成若干个子问题，先求解子问题，然后从这些子问题的解中 得到原有问题的解。与分治法不同的是，动态规划经分解后得到的子问题往往 不是相互独立 的。")]),_._v(" "),v("h1",{attrs:{id:"动态递归的算法模板"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态递归的算法模板"}},[_._v("#")]),_._v(" 动态递归的算法模板")]),_._v(" "),v("p",[_._v("建议打开leetcode经典dp，讲解更详细，最好结合几道经典DP题即可")]),_._v(" "),v("p",[_._v("1.分析最优子结构性质（递推关系）\n2.递归定义最优值（动态规划核心）\n3.自底向上的方式计算出最优值（动态规划的执行过程）\n4.根据计算最优值时得到的信息，构造最优解")]),_._v(" "),v("h1",{attrs:{id:"相关题目"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#相关题目"}},[_._v("#")]),_._v(" 相关题目")]),_._v(" "),v("ul",[v("li",[_._v("采用leetcode-网站")]),_._v(" "),v("li",[_._v("将所有的DP问题分成11大类，本文将每一类的题目进行补充，并对这些题目的解法进行探讨。")]),_._v(" "),v("li",[_._v("主要经典需要关注的：打家劫舍、股票、字符串序列、回文串")]),_._v(" "),v("li",[_._v("需要关注的经典：线性、区间、记忆")])]),_._v(" "),v("div",[v("img",{attrs:{src:t(439)}})]),_._v(" "),v("p",[_._v("1、线性 DP")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("最经典单串：")])]),_._v(" "),v("li",[v("ul",[v("li",[_._v("300.最长上升子序列 中等")])])]),_._v(" "),v("li",[v("p",[_._v("其他单串")])]),_._v(" "),v("li",[v("ul",[v("li",[_._v("32.最长有效括号 困难")]),_._v(" "),v("li",[_._v("376.摆动序列")]),_._v(" "),v("li",[_._v("368.最大整除子集")]),_._v(" "),v("li",[_._v("410.分割数组的最大值")])])]),_._v(" "),v("li",[v("p",[_._v("最经典双串：")])]),_._v(" "),v("li",[v("ul",[v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#longestCommonSubsequence",target:"_blank",rel:"noopener noreferrer"}},[_._v("1143.最长公共子序列"),v("OutboundLink")],1),_._v(" 中等")])])]),_._v(" "),v("li",[v("p",[_._v("其他双串")])]),_._v(" "),v("li",[v("ul",[v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#isInterleave",target:"_blank",rel:"noopener noreferrer"}},[_._v("97.交错字符串"),v("OutboundLink")],1),_._v(" 中等")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#numDistinct",target:"_blank",rel:"noopener noreferrer"}},[_._v("115.不同的子序列"),v("OutboundLink")],1),_._v(" 困难")]),_._v(" "),v("li",[_._v("583.两个字符串的删除操作")])])]),_._v(" "),v("li",[v("p",[_._v("经典问题：")])]),_._v(" "),v("li",[v("ul",[v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#maxSubArray",target:"_blank",rel:"noopener noreferrer"}},[_._v("53.最大子序和"),v("OutboundLink")],1),_._v(" 简单")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#minimumTotal",target:"_blank",rel:"noopener noreferrer"}},[_._v("120.三角形最小路径和"),v("OutboundLink")],1),_._v(" 中等")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#maxProduct",target:"_blank",rel:"noopener noreferrer"}},[_._v("152.乘积最大子数组"),v("OutboundLink")],1),_._v(" 中等")]),_._v(" "),v("li",[_._v("354.俄罗斯套娃信封问题")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#superEggDrop",target:"_blank",rel:"noopener noreferrer"}},[_._v("887.鸡蛋掉落（DP+二分）"),v("OutboundLink")],1),_._v(" 困难")])])]),_._v(" "),v("li",[v("p",[_._v("打家劫舍系列: (打家劫舍3 是树形DP)")])]),_._v(" "),v("li",[v("ul",[v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#rob",target:"_blank",rel:"noopener noreferrer"}},[_._v("198.打家劫舍"),v("OutboundLink")],1),_._v(" 中等")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#rob2",target:"_blank",rel:"noopener noreferrer"}},[_._v("213.打家劫舍 II"),v("OutboundLink")],1),_._v(" 中等")])])]),_._v(" "),v("li",[v("p",[_._v("股票系列:")])]),_._v(" "),v("li",[v("ul",[v("li",[_._v("121.买卖股票的最佳时机")]),_._v(" "),v("li",[_._v("122.买卖股票的最佳时机 II")]),_._v(" "),v("li",[_._v("123.买卖股票的最佳时机 III")]),_._v(" "),v("li",[_._v("188.买卖股票的最佳时机 IV")]),_._v(" "),v("li",[_._v("309.最佳买卖股票时机含冷冻期")]),_._v(" "),v("li",[_._v("714.买卖股票的最佳时机含手续费")])])]),_._v(" "),v("li",[v("p",[_._v("字符串匹配系列")])]),_._v(" "),v("li",[v("ul",[v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#distance",target:"_blank",rel:"noopener noreferrer"}},[_._v("72.编辑距离"),v("OutboundLink")],1),_._v(" 困难")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#isMatch",target:"_blank",rel:"noopener noreferrer"}},[_._v("44.通配符匹配"),v("OutboundLink")],1),_._v(" 困难")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/pl0321/article/details/115507286#isMatch2",target:"_blank",rel:"noopener noreferrer"}},[_._v("10.正则表达式匹配"),v("OutboundLink")],1),_._v(" 困难")])])]),_._v(" "),v("li",[v("p",[_._v("其他")])]),_._v(" "),v("li",[v("ul",[v("li",[_._v("375.猜数字大小 II")])])])]),_._v(" "),v("p",[_._v("2、区间 DP")]),_._v(" "),v("p",[_._v("5.最长回文子串 中等")]),_._v(" "),v("p",[_._v("516.最长回文子序列")]),_._v(" "),v("p",[_._v("\\87. 扰乱字符串 困难")]),_._v(" "),v("p",[_._v("312.戳气球 困难")]),_._v(" "),v("p",[_._v("730.统计不同回文子字符串")]),_._v(" "),v("p",[_._v("1039.多边形三角剖分的最低得分")]),_._v(" "),v("p",[_._v("664.奇怪的打印机")]),_._v(" "),v("p",[_._v("\\1246. 删除回文子数组")]),_._v(" "),v("p",[_._v("3、背包 DP")]),_._v(" "),v("p",[_._v("\\377. 组合总和 Ⅳ")]),_._v(" "),v("p",[_._v("416.分割等和子集 (01背包-要求恰好取到背包容量)")]),_._v(" "),v("p",[_._v("494.目标和 (01背包-求方案数)")]),_._v(" "),v("p",[_._v("322.零钱兑换 (完全背包)")]),_._v(" "),v("p",[_._v("518.零钱兑换 II (完全背包-求方案数)")]),_._v(" "),v("p",[_._v("474.一和零 (二维费用背包)")]),_._v(" "),v("p",[_._v("4、树形 DP")]),_._v(" "),v("p",[_._v("124.二叉树中的最大路径和 困难")]),_._v(" "),v("p",[_._v("1245.树的直径 (邻接表上的树形DP)")]),_._v(" "),v("p",[_._v("543.二叉树的直径 简单")]),_._v(" "),v("p",[_._v("333.最大 BST 子树")]),_._v(" "),v("p",[_._v("337.打家劫舍 III 中等")]),_._v(" "),v("p",[_._v("5、状态压缩 DP")]),_._v(" "),v("p",[_._v("464.我能赢吗")]),_._v(" "),v("p",[_._v("526.优美的排列")]),_._v(" "),v("p",[_._v("935.骑士拨号器")]),_._v(" "),v("p",[_._v("1349.参加考试的最大学生数")]),_._v(" "),v("p",[_._v("6、数位 DP")]),_._v(" "),v("p",[_._v("233.数字 1 的个数 困难")]),_._v(" "),v("p",[_._v("902.最大为 N 的数字组合")]),_._v(" "),v("p",[_._v("1015.可被 K 整除的最小整数")]),_._v(" "),v("p",[_._v("7、计数型 DP")]),_._v(" "),v("p",[_._v("计数型DP都可以以组合数学的方法写出组合数，然后dp求组合数")]),_._v(" "),v("p",[_._v("62.不同路径")]),_._v(" "),v("p",[_._v("63.不同路径 II")]),_._v(" "),v("p",[_._v("96.不同的二叉搜索树")]),_._v(" "),v("p",[_._v("1259.不相交的握手 (卢卡斯定理求大组合数模质数)")]),_._v(" "),v("p",[_._v("8、递推型 DP")]),_._v(" "),v("p",[_._v("70.爬楼梯")]),_._v(" "),v("p",[_._v("509.斐波那契数")]),_._v(" "),v("p",[_._v("\\576. 出界的路径数")]),_._v(" "),v("p",[_._v("\\688. “马”在棋盘上的概率")]),_._v(" "),v("p",[_._v("935.骑士拨号器")]),_._v(" "),v("p",[_._v("957.N 天后的牢房")]),_._v(" "),v("p",[_._v("1137.第 N 个泰波那契数")]),_._v(" "),v("p",[_._v("9、概率型 DP")]),_._v(" "),v("p",[_._v("求概率，求数学期望")]),_._v(" "),v("p",[_._v("808.分汤")]),_._v(" "),v("p",[_._v("837.新21点")]),_._v(" "),v("p",[_._v("10、博弈型 DP")]),_._v(" "),v("p",[_._v("策梅洛定理，SG 定理，minimax")]),_._v(" "),v("p",[_._v("翻转游戏")]),_._v(" "),v("p",[_._v("293.翻转游戏")]),_._v(" "),v("p",[_._v("294.翻转游戏 II")]),_._v(" "),v("p",[_._v("Nim游戏")]),_._v(" "),v("p",[_._v("292.Nim 游戏")]),_._v(" "),v("p",[_._v("石子游戏")]),_._v(" "),v("p",[_._v("877.石子游戏")]),_._v(" "),v("p",[_._v("1140.石子游戏 II")]),_._v(" "),v("p",[_._v("井字游戏")]),_._v(" "),v("p",[_._v("348.判定井字棋胜负")]),_._v(" "),v("p",[_._v("794.有效的井字游戏")]),_._v(" "),v("p",[_._v("1275.找出井字棋的获胜者")]),_._v(" "),v("p",[_._v("11、记忆化搜索")]),_._v(" "),v("p",[_._v("本质是 dfs + 记忆化，用在状态的转移方向不确定的情况")]),_._v(" "),v("p",[_._v("329.矩阵中的最长递增路径")]),_._v(" "),v("p",[_._v("576.出界的路径数")]),_._v(" "),v("h1",{attrs:{id:"参考资料"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[_._v("#")]),_._v(" 参考资料")]),_._v(" "),v("p",[_._v("1、https://blog.csdn.net/qq_44398094/article/details/111318003")]),_._v(" "),v("p",[_._v("2、https://blog.csdn.net/pl0321/article/details/115507286")])])}),[],!1,null,null,null);v.default=r.exports}}]);